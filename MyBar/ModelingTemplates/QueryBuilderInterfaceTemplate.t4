<#@ Include File="TemplateHeader.t4" #>
<#@ Modeling ElementType="Microsoft.VisualStudio.Uml.Classes.IClass" Processor="ModelingProcessor" ApplyStereotypes="CSharp" #>
<#@ Import Namespace="Microsoft.VisualStudio.ArchitectureTools.Extensibility.Uml" #>
<#@ Import Namespace="Microsoft.VisualStudio.Uml.AuxiliaryConstructs" #>
<#@ import namespace="Microsoft.VisualStudio.Uml.Classes" #>
<#@ import namespace="System.Linq" #>
<#@ Include File="CSharpCommentHelpers.t4" #>
<#@ Include File="CSharpHelpers.t4" #>
<#@ Include File="CqrsTemplateHelpers.t4" #>
<#@ Include File="ModelHelper.t4" #>
<#@ Output Extension=".cs" #>
<#
var stereoTypeProperties = this.Element.AppliedStereotypes.Single(property => property.Name == "QueryStrategy");

// Header
WriteAutoGeneratedWarningHeader();

string classNamespace = GetNamespace(this.Element.Namespace);
string className = ClassifierName(this.Element);
string aggregateRootName = stereoTypeProperties.PropertyInstances
	.Single(property => property.Name == "AggregateRootName")
	.Value;

// using statements
#>

using System.CodeDom.Compiler;
using System.Collections.Generic;
using Cqrs.Repositories.Queries;

namespace <#= classNamespace #>
{
<#
	// Class and Attributes
#>
	<#= GetGeneratedCodeAttribute() #>
	public partial interface I<#= className #>Builder : IQueryBuilder<<#= className #>, Entities.<#= aggregateRootName #>Entity>
	{
	}
}
<#+
	protected override bool AppliesToElement()
	{
		return ShouldGenerateCodeForElement(this.Element) && this.Element.AppliedStereotypes.Any(property => property.Name == "QueryStrategy");
	}
#>