<UserControl x:Class="MYBAR.View.Porosi.PorosiView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MYBAR.View.Porosi"
             mc:Ignorable="d" 
             VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
    <UserControl.Resources>
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBars-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="LightGray" />
            <Setter Property="Background" Value="DarkGray" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="19" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="12" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="#57bc90"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="Black" />
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="2,0,2,0"/>
            <Setter Property="Margin" Value="0,0,0,2"></Setter>
            <Setter Property="Foreground" Value="wHITE"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
            <!--<Setter Property="Width" Value="100"></Setter>-->
            <Setter Property="Height" Value="65" ></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Chrome"
        					Background="{TemplateBinding Background}"
        					BorderBrush="{TemplateBinding BorderBrush}"
        					BorderThickness="{TemplateBinding BorderThickness}"
        					SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="Presenter" Margin="{TemplateBinding Padding}"
        						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        						RecognizesAccessKey="True"
        						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#67b8e0" />
                                <Setter Property="BorderBrush" Value="#cccccc" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1ba1e2" />
                                <Setter Property="BorderBrush" Value="#1ba1e2"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ProductStyle" TargetType="Grid">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="#57bc90"/>
            <Setter Property="Margin" Value="2,0,2,4"></Setter>
            <Setter Property="Height" Value="65" ></Setter>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="#67b8e0" />
                </Trigger>

            </Style.Triggers>


        </Style>
        <Style x:Key="HeaderProdukt" TargetType="Grid">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="#f4f4f7"/>

        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}"></Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="4*" ></RowDefinition>
            <RowDefinition Height="2*" ></RowDefinition>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
       
            <ColumnDefinition Width="2*"></ColumnDefinition>
            <ColumnDefinition Width="3*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <DataGrid ColumnHeaderStyle="{StaticResource HeaderStyle}" Name="PorositeDG" IsReadOnly="True" MouseLeftButtonUp="PorositeDG_MouseLeftButtonDown"   CanUserAddRows="False" AutoGenerateColumns="False"  ColumnWidth="*" Grid.RowSpan="2">
            <DataGrid.Columns>
                <DataGridTextColumn IsReadOnly="True" Header="User" Binding="{Binding Client_Name}"  />
                <DataGridTextColumn IsReadOnly="True" Header="Koha" Binding="{Binding Order_Time}"  />
                <DataGridTextColumn IsReadOnly="True" Header="Totali" Binding="{Binding Order_Total }"  />
                <DataGridTextColumn IsReadOnly="True" Header="Statusi" Binding="{Binding Order_Status }"  />
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Order_Status}" Value="Cancelled">
                            <Setter Property="Background" Value="OrangeRed"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Order_Status}" Value="Approved">
                            <Setter Property="Background" Value="#75B84B"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">


                    
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="FontFamily" Value="Aileron Thin" ></Setter>
                    <Setter Property="Height" Value="30" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#7DA7D9"/>
                            <Setter Property="Foreground" Value="Black"/>

                        </Trigger>

                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#f4f4f7" />
                    <Setter Property="FontSize" Value="20"></Setter>

                </Style>
            </DataGrid.Resources>
        </DataGrid>

        
        <StackPanel Background="White"   Grid.Column="2" Grid.Row="0" Margin="0,0,5,0" >

            <DataGrid IsReadOnly="True"  HeadersVisibility="Column"  AutoGenerateColumns="True"  CanUserAddRows="False"  ColumnWidth="*" Name="FatureBody"   >
               
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">


                        <Setter Property="Background" Value="White"/>
                        <Setter Property="FontSize" Value="20"/>
                        <Setter Property="FontFamily" Value="Aileron Thin" ></Setter>
                        <Setter Property="Height" Value="30" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#7DA7D9"/>
                                <Setter Property="Foreground" Value="Black"/>

                            </Trigger>

                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#f4f4f7" />
                        <Setter Property="FontSize" Value="27"></Setter>

                    </Style>
                </DataGrid.Resources>
            </DataGrid>

            <DataGrid ColumnHeaderStyle="{StaticResource HeaderStyle}"   AutoGenerateColumns="False"  IsReadOnly="True"  CanUserAddRows="False"  ColumnWidth="*" Name="PorosiBody"   >
                <DataGrid.Columns>
                    <DataGridTextColumn IsReadOnly="True" Header="Asortimenti" Binding="{Binding Name}"  />
                    <DataGridTextColumn   IsReadOnly="True" Header="Sasi" Binding="{Binding Quantity}"  />
                    <DataGridTextColumn IsReadOnly="True" Header="Cmimi" Binding="{Binding SalePrice}"  />
                </DataGrid.Columns>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">


                        <Setter Property="Background" Value="LightBlue"/>
                        <Setter Property="FontSize" Value="20"/>
                        <Setter Property="FontFamily" Value="Aileron Thin" ></Setter>

                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#7DA7D9"/>
                                <Setter Property="Foreground" Value="Black"/>

                            </Trigger>

                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#c5c9c9" />
                        <Setter Property="FontSize" Value="18"></Setter>

                    </Style>
                </DataGrid.Resources>
            </DataGrid>


        </StackPanel>
        <StackPanel Background="#f4f4f7" Grid.Column="2" Grid.Row="1">

            <DockPanel Margin="0,10">

                <TextBlock FontSize="35">Tavolina:</TextBlock>
                <ComboBox Background="Transparent" FontSize="35" MinWidth="50"     Name="FreeTable"></ComboBox>
                <WrapPanel HorizontalAlignment="Right" DockPanel.Dock="Right">
                    <Label FontSize="35" FontWeight="Bold" Margin="0,0,5,0">Totali</Label>
                    <Label  VerticalContentAlignment="Center" FontSize="45" FontWeight="Bold" FontFamily="Arial" Foreground="Red" >
                        <Run Name="Total">0</Run></Label>
                </WrapPanel>
            </DockPanel>


            <Grid   VerticalAlignment="Bottom" Margin="0,0,0,50"   >
                <Grid.ColumnDefinitions>

                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition    Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button  Margin="0,0,5,0" HorizontalContentAlignment="Center"  Click="Aprovo_Click"  Name="Aprovo" HorizontalAlignment="Stretch"   Content="Aprovo"/>
                <Button   Margin="0,0,5,0"  HorizontalContentAlignment="Center" Click="Refuzo_Click"  HorizontalAlignment="Stretch"   Grid.Column="1"  Name="Refuzo"  Content="Refuzo"/>

               

            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
